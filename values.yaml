bankname: &bankname banka
dbusername: &dbusername postgres
dbpassword: &dbpassword password

apps:
  springapp:
    repository: naoufal450/bank-backend
    tag: "latest"
    replicaCount: 1
    #springActiveProfiles: "docker, banka"
    springActiveProfiles: *bankname
    database: backend
  reactapp:
    repository: naoufal450/react-app
    tag: "latest"
    replicaCount: 1
  pullPolicy: Always

service:
  reactapp:
    name: reactapp-service
    type: ClusterIP
    protocol: TCP
    externalPort: 80
    internalPort: 80
  springapp:
    name: springapp-service
    type: NodePort
    protocol: TCP
    externalPort: 8081
    internalPort: 8081
  rabbitmq:
    name: rabbitmq-service
    type: NodePort
    protocol: TCP
    externalPort: 5672
    internalPort: 5672

ingress:
  reactapp:
    name: react-ingress
    path: /
    host: react.octo.com
    port: 80
  springapp:
    name: spring-ingress
    path: /
    host: spring.octo.com
    port: 80


keycloak:
  keycloak:
    service:
      httpPort: 80
    ingress:
      enabled: true
      hosts:
        - keycloak.octo.com

    basePath: auth
    username: keycloak
    password: keycloak
    persistence:

      # Disable deployment of the PostgreSQL chart
      deployPostgres: false

      dbVendor: postgres

      ## The following values only apply if "deployPostgres" is set to "false"
      dbName: keycloak
      # The Postgres service name is defined in template helper : .Release.Name-"postgresql"
      # use "helm install bank ." or you must change dbHost with the release name: "helm install my-release-name ." ==> dbHost: my-release-name-postgresql
      dbHost: bank-postgresql
      dbPort: 5432
      dbUser: *dbusername
      # Only used if no existing secret is specified. In this case a new secret is created
      dbPassword: *dbpassword

    extraVolumes: |
      - name: realm-secret
        secret:
          secretName: realm-secret

    extraVolumeMounts: |
      - name: realm-secret
        mountPath: "/realm/"
        readOnly: true

    extraArgs: -Dkeycloak.import=/realm/realm.json

#override settings for the postgresql chart
postgresql:
  service:
    port: 5432
  postgresqlUsername: *dbusername
  postgresqlPassword: *dbpassword
  initdbScripts:
    db-init.sh: |
      #!/bin/bash
      set -e
      set -u

      function create_user_and_database() {
      local database=$1
      echo "  Creating user and database '$database'"
      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" <<-EOSQL
          CREATE USER $database WITH PASSWORD 'password';
          CREATE DATABASE $database;
          GRANT ALL PRIVILEGES ON DATABASE $database TO $database;
      EOSQL
      }

      POSTGRES_MULTIPLE_DATABASES=backend,banka,bankb,centralbank,keycloak

      if [ -n "$POSTGRES_MULTIPLE_DATABASES" ]; then
      echo "Multiple database creation requested: $POSTGRES_MULTIPLE_DATABASES"
      for db in $(echo $POSTGRES_MULTIPLE_DATABASES | tr ',' ' '); do
        create_user_and_database $db
      done
      echo "Multiple databases created"
      fi


rabbitmq:
  repository: rabbitmq
  tag: "3-management"
  replicaCount: 1
  pullPolicy: IfNotPresent

  rabbitmq:
    username: guest
    password: guest
    defaultVhost: *bankname




serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""



resources: {}

nodeSelector: {}

tolerations: []

affinity: {}
